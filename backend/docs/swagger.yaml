openapi: 3.0.0
info:
  version: 0.1.0
  title: songbook-api-server documentation
  description: a vizsgaremek végpontjainak használata
servers:
  - url: http://localhost:3000
paths:
  /song:
    get:
      description: returns a list of all songs (populated, without lyrics)
      responses:
        '200':
          description: List of songs returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new song
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
      responses:
        '201':
          description: Song has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /song/ids:
    get:
      description: returns a list of all songs (only ID references)
      responses:
        '200':
          description: List of songs (with refs) returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /song/{_id}:
    get:
      description: Get a song (populated, with lyrics)
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a song
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Song'
        '400':
          description: Song ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Song with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates a song
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
      responses:
        '200':
          description: Song has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
        '400':
          description: Invalid request when the post data or the id format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a song
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Song has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          description: Song ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Song with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /artist:
    get:
      description: returns a list of all artists (populated)
      responses:
        '200':
          description: List of artists returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new artist
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artist'
      responses:
        '201':
          description: Artist has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /artist/ids:
    get:
      description: returns a list of all artists (only ID references)
      responses:
        '200':
          description: List of artists (with refs) returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /artist/{_id}:
    get:
      description: Get an artist (populated)
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Return an artist
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Artist'
        '400':
          description: Artist ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Artist with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates an artist
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artist'
      responses:
        '200':
          description: Artist has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Invalid request when the post data or the id format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes an artist
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Artist has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          description: Artist ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Artist with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /album:
    get:
      description: returns a list of all albums (populated)
      responses:
        '200':
          description: List of albums returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new album
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
      responses:
        '201':
          description: Album has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /album/ids:
    get:
      description: returns a list of all albums (only ID references)
      responses:
        '200':
          description: List of albums (with refs) returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /album/{_id}:
    get:
      description: Get an album (populated)
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Return an album
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Album'
        '400':
          description: Album ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Album with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates an album
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
      responses:
        '200':
          description: Album has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Invalid request when the post data or the id format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes an album
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Album has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          description: Album ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Album with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /composer:
    get:
      description: returns a list of all composers (populated)
      responses:
        '200':
          description: List of composers returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Composer'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new composer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composer'
      responses:
        '201':
          description: Composer has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composer'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /composer/ids:
    get:
      description: returns a list of all composers (only ID references)
      responses:
        '200':
          description: List of composers (with refs) returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Composer'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /composer/{_id}:
    get:
      description: Get a composer (populated)
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Return a composer
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Composer'
        '400':
          description: Composer ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Composer with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates a composer
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composer'
      responses:
        '200':
          description: Composer has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composer'
        '400':
          description: Invalid request when the post data or the id format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a composer
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Composer has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          description: Composer ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Composer with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /lyricist:
    get:
      description: returns a list of all lyricists (populated)
      responses:
        '200':
          description: List of lyricists returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lyricist'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new lyricist
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lyricist'
      responses:
        '201':
          description: Lyricist has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lyricist'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /lyricist/ids:
    get:
      description: returns a list of all lyricists (only ID references)
      responses:
        '200':
          description: List of lyricists (with refs) returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lyricist'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /lyricist/{_id}:
    get:
      description: Get a lyricist (populated)
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Return a lyricist
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Lyricist'
        '400':
          description: Lyricist ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Lyricist with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates a lyricist
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lyricist'
      responses:
        '200':
          description: Lyricist has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lyricist'
        '400':
          description: Invalid request when the post data or the id format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a lyricist
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Lyricist has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          description: Lyricist ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Lyricist with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /genre:
    get:
      description: returns a list of all genres (populated)
      responses:
        '200':
          description: List of genres returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Genre'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new genre
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
      responses:
        '201':
          description: Genre has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /genre/ids:
    get:
      description: returns a list of all genres (only ID references)
      responses:
        '200':
          description: List of genres (with refs) returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Genre'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /genre/{_id}:
    get:
      description: Get a genre (populated)
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Return a genre
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Genre'
        '400':
          description: Genre ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Genre with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates a genre
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
      responses:
        '200':
          description: Genre has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
        '400':
          description: Invalid request when the post data or the id format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a genre
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Genre has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          description: Genre ID format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Genre with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      description: Request an access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
        '401':
          description: Login failed (invalid username or password)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /refresh:
    post:
      description: Request a new access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: A new access token is generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
        '401':
          description: Refresh failed (missing or invalid refresh token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /logout:
    post:
      description: Request to delete the refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
        '401':
          description: Logout failed (missing or invalid refresh token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Song:
      type: object
      required:
        - title
        - artist
        - lyrics
      properties:
        title:
          type: string
        artist:
          type: object
          $ref: '#components/schemas/Artist'
        album:
          type: object
          $ref: '#components/schemas/Album'
        year:
          type: number
        time:
          type: string
        lyricist:
          type: object
          $ref: '#components/schemas/Lyricist'
        composer:
          type: object
          $ref: '#components/schemas/Composer'
        x_genre:
          type: object
          $ref: '#components/schemas/Genre'
        lyrics:
          type: string
    Artist:
      type: object
      required:
        - name
        - songs
      properties:
        name:
          type: string
        imageUrl:
          type: string
        songs:
          type: array
          items:
            $ref: '#components/schemas/Song'
    Album:
      type: object
      required:
        - name
        - artist
        - songs
      properties:
        name:
          type: string
        artist:
          type: object
          $ref: '#components/schemas/Artist'
        year:
          type: number
        imageUrl:
          type: string
        songs:
          type: array
          items:
            $ref: '#components/schemas/Song'
    Lyricist:
      type: object
      required:
        - name
        - songs
      properties:
        name:
          type: string
        songs:
          type: array
          items:
            $ref: '#components/schemas/Song'
    Composer:
      type: object
      required:
        - name
        - songs
      properties:
        name:
          type: string
        songs:
          type: array
          items:
            $ref: '#components/schemas/Song'
    Genre:
      type: object
      required:
        - name
        - songs
      properties:
        name:
          type: string
        songs:
          type: array
          items:
            $ref: '#components/schemas/Song'
    Error:
      type: object
      required:
        - has_error
        - message
      properties:
        has_error:
          type: boolean
        message:
          type: string
        errorCode:
          type: number
    Credentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    Tokens:
      type: object
      required:
        - success
        - accessToken
        - refreshToken
        - user
      properties:
        success:
          type: boolean
        accessToken:
          type: string
        refreshToken:
          type: string
        user:
          type: object
